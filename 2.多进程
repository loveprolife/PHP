pcntl_fork
<?php
date_default_timezone_set("asia/shanghai");

$pid = pcntl_fork();
if ($pid==-1) {
    die('fork失败');
} else if ($pid==0) {
    //子进程执行
    $sec = 10;
    echo date('H:i:s') .'| 我是子进程 (PID:' . posix_getpid() . ')' . ',我休眠' . $sec . '秒后结束' . PHP_EOL;
    
} else if ($pid>0) {
    //父进程执行
    $sec = 15;
    echo date('H:i:s') . '| 我是父进程 (PID:' . posix_getpid() . '),我创建了一个子进程 (PID:' . $pid . ')' . ',我休眠' . $sec . '秒后结束' . PHP_EOL;
}
sleep($sec);
echo date('H:i:s') . '| 进程(PID:'.posix_getpid().')结束' . PHP_EOL;
exit(0);
/**********************************输出*************************************
16:22:13| 我是父进程 (PID:28082),我创建了一个子进程 (PID:28083),我休眠15秒后结束
16:22:13| 我是子进程 (PID:28083),我休眠10秒后结束
16:22:23| 进程(PID:28083)结束
16:22:28| 进程(PID:28082)结束
****************************************************************************/
?>


<?php
date_default_timezone_set("asia/shanghai");

for ($i=1; $i <= 10; $i++) { 
    $pid = pcntl_fork();

    switch ($pid) {
    case -1:
        echo 'fork failed!'.PHP_EOL;
        break;
    case 0:
        //子进程
        sleep(rand(10,60));
        exit(0);
        break;  
    default:
        //父进程
        echo date('H:i:s')."   开启子进程{$pid}" . PHP_EOL;
        $child_pids[]=$pid;
        break;
    }
}

while(count($child_pids)>0){
    
    foreach ($child_pids as $key => $pid) {
    $res = pcntl_waitpid($pid, $status, WNOHANG);   
    if($res==-1||$res>0){
        echo date('H:i:s')."   子进程{$pid}关闭..." . PHP_EOL;
        unset($child_pids[$key]);//剔除已关闭的子进程
    }   
    }
    
    if(count($child_pids)==0){
    break;
    }
    sleep(5);
}
echo date('H:i:s').'   主进程结束' . PHP_EOL;

/**********输出*************

17:33:47   开启子进程29022
17:33:47   开启子进程29023
17:33:47   开启子进程29024
17:33:47   开启子进程29025
17:33:47   开启子进程29026
17:33:47   开启子进程29027
17:33:47   开启子进程29028
17:33:47   开启子进程29029
17:33:47   开启子进程29030
17:33:47   开启子进程29031
17:34:02   子进程29026关闭...
17:34:07   子进程29022关闭...
17:34:07   子进程29025关闭...
17:34:07   子进程29030关闭...
17:34:12   子进程29029关闭...
17:34:12   子进程29031关闭...
17:34:27   子进程29024关闭...
17:34:42   子进程29027关闭...
17:34:42   子进程29028关闭...
17:34:47   子进程29023关闭...
17:34:47   主进程结束

*****************************/
?>











//


//
